name: CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
    - name: Create stub & test framework code for a given OpenAPI
      env:
        OPENAPI_FILE: https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/2_0/petstore.yaml
        STUB_FRAMEWORK: go-server
        TEST_FRAMEWORK: go
      run: |
        docker pull openapitools/openapi-generator-cli
        docker run --rm -v ${PWD}:/local openapitools/openapi-generator-cli generate \
          -i $OPENAPI_FILE \
          -g $STUB_FRAMEWORK \
          -o /local/out/$STUB_FRAMEWORK
        docker run --rm -v ${PWD}:/local openapitools/openapi-generator-cli generate \
          -i $OPENAPI_FILE \
          -g $TEST_FRAMEWORK \
          -o /local/out/$TEST_FRAMEWORK
          
    - name: Build a Docker image for the stub framework
      env:
        STUB_FRAMEWORK: go-server
      run: |
        cd out/$STUB_FRAMEWORK
        docker build . -t openapi-stub
    
    - name: Spin up the stub image, print the IP address, hit one of the stub endpoints, then kill the stub container
      env:
        STUB_FRAMEWORK: go-server
      run: |
        CID=$(docker run -d openapi-stub:latest)
        GEN_IP=$(docker inspect --format '{{.NetworkSettings.IPAddress}}'  $CID)
        echo "Stub container $CID is accessible on IP $GEN_IP"
        curl -vvvv http://$GEN_IP:8080/v2/store/inventory
        docker stop $CID && docker rm $CID
